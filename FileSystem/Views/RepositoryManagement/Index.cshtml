@model IList<FileSystemDAL.Models.Repository>
@{
    ViewBag.Title = "Repository Management";
}
@Styles.Render("~/Content/jquery.dataTables")
@Styles.Render("~/Content/bootstrap-switch")

<h2>@ViewBag.Title</h2>

<h4>Manage repositorys</h4>
<hr />
<table id="myDataTable" cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Repository name</th>
            <th>Is Active</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var repository in Model)
        {
            <tr>
                <td>@repository.RepositoryId</td>
                <td>@repository.RepositoryName</td>
                <td class="center">
                    @if (repository.IsActive)
                    {
                        <input class="switch-small" data-off="warning" type="checkbox" checked />
                    }
                    else
                    {
                        <input class="switch-small" data-off="warning" type="checkbox" />
                    }
                </td>
                <td class="center">
                    <button type="button" class="btn btn-danger btn-sm" onclick="deleteRepository(this)"><span class="glyphicon glyphicon-remove"></span>Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@Scripts.Render("~/bundles/jquery.dataTables")
@Scripts.Render("~/bundles/bootstrap-switch")

<script type="text/javascript">
    $(document).ready(function() {
        $('#myDataTable').dataTable({
            'bSortClasses': false,
            "aoColumnDefs": [{ "bSortable": false, "aTargets": ["_all"] }],
            "aoColumns": [{ "bSearchable": false }, { "bSearchable": true }, { "bSearchable": false }, { "bSearchable": false }],
            "fnDrawCallback": function() {
                bootstrapSwitchInit();
            }
        });
    });

    var bootstrapSwitchInit = function() {
        $('input[type=checkbox]').each(function() {
            if ($(this).is(':visible')) {
                $(this).bootstrapSwitch();
                $(this).on('switch-change', function (e, data) {
                    var rowIndex = $('#myDataTable').dataTable().fnGetPosition($(this).closest('tr')[0]);
                    var rowData = $('#myDataTable').dataTable().fnGetData(rowIndex);
                    $.ajax({
                        url: '@Url.Action("ActiveRepository")',
                        type: "POST",
                        dataType: 'JSON',
                        data: {
                            'idRepository': rowData[0],
                            'isActive': data.value
                        }
                    });
                });
            }
        });
    };
    var lockDelete = false;
    var deleteRepository = function (button) {
        if (lockDelete == false) {
            lockDelete = true;
            $(button).off('click', deleteRepositoryInit);
            var rowIndex = $('#myDataTable').dataTable().fnGetPosition($(button).closest('tr')[0]);
            var rowData = $('#myDataTable').dataTable().fnGetData(rowIndex);
            $.ajax({
                url: '@Url.Action("DeleteRepository")',
                type: "POST",
                dataType: 'JSON',
                data: {
                    'idRepository': rowData[0],
                },
                success: function () {
                    $('#myDataTable').dataTable().fnDeleteRow(rowIndex);
                    lockDelete = false;
                },
                error: function () {
                    lockDelete = false;
                }
            });
        }
        
    };
    
</script>

