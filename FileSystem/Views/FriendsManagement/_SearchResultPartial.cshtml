@model FileSystem.Models.RepositorySearch

@if (Model.SearchRepositoryList != null)
{
    @Styles.Render("~/Content/jquery.dataTables")

    <table id="myDataTable" cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>ID</th>
                <th>Repository Name</th>
                <th>Option</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var repository in Model.SearchRepositoryList)
            {
                <tr>
                    <td>@repository.RepositoryId</td>
                    <td>@repository.RepositoryName</td>
                    <td>
                        @if (Model.SentInvitationList.Any(x => x.RepositoryId == repository.RepositoryId))
                        {
                            <button type="button" class="btn btn-danger btn-sm" onclick=" cancelInviteRepository(this) "><span class="glyphicon glyphicon-remove"></span> Cancel Invite</button>
                        }
                        else if (Model.IncomingInvitationList.Any(x => x.RepositoryId == repository.RepositoryId))
                        {
                            <button type="button" class="btn btn-success btn-sm" onclick=" acceptInvitation(this) "><span class="glyphicon glyphicon-ok"></span> Accept Invitation</button>
                        }
                        else if (Model.AcceptedInvitationList.Any(x => x.RepositoryId == repository.RepositoryId))
                        {
                            <button type="button" class="btn btn-danger btn-sm" onclick=" cancelInviteRepository(this) "><span class="glyphicon glyphicon-remove"></span> Remove From Friend</button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-default btn-sm" onclick=" inviteRepository(this) "><span class="glyphicon glyphicon-user"></span> Invite</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div>
        <h4>No result.</h4>
    </div>
}
 
@Scripts.Render("~/bundles/jquery.dataTables")

<script type="text/javascript">
    $(document).ready(function () {
        $('#myDataTable').dataTable({
            'bSortClasses': false,
            "aoColumnDefs": [{ "bSortable": false, "aTargets": ["_all"] }],
            "aoColumns": [{ "bSearchable": false }, { "bSearchable": true }, { "bSearchable": false }]
        });
    });

    var lockInvite = false;
    var inviteRepository = function (button) {
        if (lockInvite == false) {
            lockInvite = true;
            $(button).off('click', inviteRepository);
            var rowIndex = $('#myDataTable').dataTable().fnGetPosition($(button).closest('tr')[0]);
            var rowData = $('#myDataTable').dataTable().fnGetData(rowIndex);
            $.ajax({
                url: '@Url.Action("InviteFriend")',
                type: "POST",
                dataType: 'html',
                data: {
                    'repositoryId': rowData[0],
                    'searchName': '@Model.RepositoryName'
                },
                success: function (data) {
                    $("#searchResultPartial").html(data);
                    lockInvite = false;
                },
                error: function () {
                    lockInvite = false;
                }
            });
        }
    };
    
    var lockDelete = false;
    var cancelInviteRepository = function (button) {
        if (lockDelete == false) {
            lockDelete = true;
            $(button).off('click', cancelInviteRepository);
            var rowIndex = $('#myDataTable').dataTable().fnGetPosition($(button).closest('tr')[0]);
            var rowData = $('#myDataTable').dataTable().fnGetData(rowIndex);
            $.ajax({
                url: '@Url.Action("CancelInviteFriend")',
                type: "POST",
                dataType: 'html',
                data: {
                    'repositoryId': rowData[0],
                    'searchName': '@Model.RepositoryName'
                },
                success: function (data) {
                    $("#searchResultPartial").html(data);
                    lockDelete = false;
                },
                error: function () {
                    lockDelete = false;
                }
            });
        }
    };
    
    var lockAccept = false;
    var acceptInvitation = function (button) {
        if (lockAccept == false) {
            lockAccept = true;
            $(button).off('click', acceptInvitation);
            var rowIndex = $('#myDataTable').dataTable().fnGetPosition($(button).closest('tr')[0]);
            var rowData = $('#myDataTable').dataTable().fnGetData(rowIndex);
            $.ajax({
                url: '@Url.Action("AcceptInvitation")',
                type: "POST",
                dataType: 'JSON',
                data: {
                    'repositoryId': rowData[0],
                },
                success: function () {
                    $('#myDataTable').dataTable().fnDeleteRow(rowIndex);
                    lockAccept = false;
                },
                error: function () {
                    lockAccept = false;
                }
            });
        }
    };
</script>
