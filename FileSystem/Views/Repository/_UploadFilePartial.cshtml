@using FileSystem.Models
@model UploadFileViewModel
           
@Styles.Render("~/Content/jquery.fileupload")
@Styles.Render("~/Content/bootstrap-select")
           
<form class="form-horizontal" id="formFile" role="form">
    @Html.AntiForgeryToken()
    <h4>Upload file to current path</h4>
    <hr />
    @Html.ValidationSummary()
    <div class="form-group">
        @Html.LabelFor(m => m.File, new { @class = "col-md-4 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.File, new { @id="fileDialog", @type = "file", @multiple = "multiple" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.UserPermission, new { @class = "col-md-4 control-label" })
        <div class="col-md-8">
            @Html.DropDownListFor(m => m.UserPermission, new SelectList(Enum.GetValues(typeof(EUserPermission))), new { @id = "permissionFile", @class = "selectpicker" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-4 col-md-8">
            <input type="button" id="buttonUpload" class="btn btn-success" value="Upload All" />
        </div>
    </div>
    <div class="hide" id="fileListHolder">
    </div>
</form>

@Scripts.Render("~/bundles/jquery.fileupload")
@Scripts.Render("~/bundles/bootstrap-select")

<script type="text/javascript">
    $(document).ready(function () {
        $('#fileDialog').val('');
        $('#permissionFile').selectpicker();
        $('#fileDialog').fileupload({
            dataType: "json",
            url: '@Url.Action("UploadFile")',
            limitConcurrentUploads: 1,
            sequentialUploads: true,
            progressInterval: 100,
            maxChunkSize: 2097152,
            async: false,
            add: function(e, data) {
                $('#fileListHolder').removeClass('hide');
                data.context = $('<div/>').text(data.files[0].name).appendTo('#fileListHolder');
                $('</div><div class="progress progress-striped active">' +
                    '<div class="progress-bar" role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" style="width:0%">' +
                    '<span class="sr-only">0% Complete</span>' +
                    '</div></div>').appendTo(data.context);
                $('#buttonUpload').click(function() {
                    data.submit();
                });
            },
            submit: function(e, data) {
                var fileUploadId = uploadInit(data.files[0].name, data.files[0].size, '@Model.FolderId', $('#permissionFile').val());
                data.formData = { fileUploadId: fileUploadId };
            },
            done: function (e, data) {
                finishUploadFile(data.formData.fileUploadId);
                data.context.text(data.files[0].name + '... Completed');
                $('</div><div class="progress progress-striped active">' +
                    '<div class="progress-bar" role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" style="width:100%">' +
                    '<span class="sr-only">0% Complete</span>' +
                    '</div></div>').appendTo(data.context);
            },
            progress: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                data.context.find('.progress-bar').css('width', progress + '%');
            }
        });
    });

    var uploadInit = function(fileName, fileSize, folderId, userPermission) {
        var initData = {
            fileName : fileName,
            fileSize : fileSize,
            folderId : folderId,
            userPermission : userPermission
        };

        var fileUploadId;
        
        $.ajax({
            url: '@Url.Action("InitUpload")',
            type: "POST",
            dataType: 'JSON',
            data: initData,
            async: false,
            success: function (data) {
                fileUploadId = data.FileUploadId;
            },
            error: function (data) {
                return 0;
            }
        });
        return fileUploadId;
    };
    
    var finishUploadFile = function (fileId) {
        $.ajax({
            url: '@Url.Action("FinishUploadFile")',
            type: "POST",
            dataType: 'JSON',
            data: { fileUploadId: fileId },
            async: false,
            success: function (data) {
                
            },
            error: function (data) {
                
            }
        });
    };
</script>